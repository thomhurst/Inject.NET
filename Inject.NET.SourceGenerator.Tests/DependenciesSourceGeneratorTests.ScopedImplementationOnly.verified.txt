[  
using System;
using Inject.NET.Enums;
using Inject.NET.Extensions;
using Inject.NET.Services;

namespace Inject.NET.SourceGenerator.Sample.ServiceProviders;

public class ScopedImplementationOnlyServiceRegistrar : ServiceRegistrar
{
	public ScopedImplementationOnlyServiceRegistrar()
	{
		Register<global::Inject.NET.SourceGenerator.Sample.Models.Class1>((scope, type) => new global::Inject.NET.SourceGenerator.Sample.Models.Class1(), Lifetime.Scoped);
	}
}

  
using System;
using System.Threading.Tasks;
using Inject.NET.Enums;
using Inject.NET.Interfaces;

namespace Inject.NET.SourceGenerator.Sample.ServiceProviders;

public partial class ScopedImplementationOnly
{
	public static Task<ITenantedServiceProvider> BuildAsync() =>
		new ScopedImplementationOnlyServiceRegistrar().BuildAsync();
}

]