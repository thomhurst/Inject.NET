[  
using System;
using Inject.NET.Enums;
using Inject.NET.Extensions;
using Inject.NET.Services;

namespace Inject.NET.SourceGenerator.Sample.ServiceProviders;

public class ScopedServiceImplementationServiceRegistrar : ServiceRegistrar
{
	public ScopedServiceImplementationServiceRegistrar()
	{
		Register<Interface1, Class1>((scope, type) => new Class1(), Lifetime.Scoped);
	}
}

  
using System;
using System.Threading.Tasks;
using Inject.NET.Enums;
using Inject.NET.Interfaces;

namespace Inject.NET.SourceGenerator.Sample.ServiceProviders;

public partial class ScopedServiceImplementation
{
	public static ValueTask<IServiceProviderRoot> BuildAsync() =>
		new ScopedServiceImplementationServiceRegistrar().BuildAsync();
}

]